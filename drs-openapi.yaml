openapi: 3.0.3
x-stoplight:
  id: x0k3zcu2ovr68
info:
  title: DRS API Representation
  contact:
    name: Dawid Brylka
    url: 'https://www.kaucja.pl'
    email: dawid.brylka@kaucja.pl
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://drs.kaucja.pl/api/v3'
paths:
  /product:
    post:
      operationId: productPost
      tags:
        - product
      summary: Add or update product
      description: |
        Endpoint responsible for adding, or updating new product by Introducers. <br>
        Caling in will cause change in DRS and delayed change in RVM systems.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: models/ProudctPost.yaml
      responses:
        '200':
          $ref: '#/components/responses/200PostReturnId'
        '400':
          $ref: '#/components/responses/400ValidationFailed'
    get:
      tags:
        - products
      summary: Get product data
      parameters:
        - name: sendImages
          in: query
          description: Shall we send images to RVM
          required: false
          schema:
            type: boolean
            default: false
        - name: updatedAfter
          in: query
          description: Display items updated After
          required: false
          schema:
            type: string
            format: date-time
        - name: createdAfter
          in: query
          description: Display items created After
          required: false
          schema:
            type: string
            format: date-time
        - $ref: '#/components/parameters/Startindex'
        - $ref: '#/components/parameters/Pagelength'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageNo:
                    type: integer
                  pageSize:
                    type: integer
                  totalItemCount:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: models/Product.yaml
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      x-stoplight:
        id: i8big2em2kghv
  '/product/{ean}':
    get:
      tags:
        - products
      summary: Get product data
      description: |
        Get data of single product.
      parameters:
        - name: sendImages
          in: query
          description: Shall we send images to RVM
          required: false
          schema:
            type: boolean
            default: false
        - name: ean
          in: path
          description: Ean that should be synced
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: models/Product.yaml
        '400':
          description: Invalid input
        '422':
          description: Duplicate ID. Please provide unique ID for Transaction Entity
      x-stoplight:
        id: 5o6n5p23xf20f
  /transaction:
    post:
      tags:
        - transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: models/Transaction.yaml
      summary: Post single Transaction
      description: Post single Transaction
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
        '409':
          $ref: '#/components/responses/409Conflict'
        '422':
          description: Validation exception
      x-stoplight:
        id: sbyw8qv8u7gj8
  /transaction/bulk:
    post:
      tags:
        - transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: models/Transaction.yaml
      summary: Post multiple Transaction
      description: Post multiple Transaction
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
        '409':
          $ref: '#/components/responses/409Conflict'
        '422':
          description: Validation exception
      x-stoplight:
        id: zpsfrh56cuuti
  /bag-replacement:
    post:
      tags:
        - rvm
      summary: Trigger an replacement action for RVM
      description: Trigger an replacement action for RVM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BagReplacement'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
        '409':
          $ref: '#/components/responses/409Conflict'
        '422':
          description: Validation exception
      x-stoplight:
        id: 3r55dg8tllqbx
  /bag-seal:
    post:
      tags:
        - rvm
      summary: Call performed when bag seal is performed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BagSeal'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      x-stoplight:
        id: lqz2mv777xppe
  /bag-is-full:
    post:
      tags:
        - rvm
      summary: Call performed when bag is full
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BagFull'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      x-stoplight:
        id: d1asmq08b0uj1
  '/machine/{id}/registered':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    head:
      summary: Query For Machine in DRS system
      tags:
        - machine
      responses:
        '200':
          description: Machine is known and registered in Kaucja DRS
        '404':
          description: Unknown Machine
      operationId: get-machine-id-registered
      x-stoplight:
        id: l2akxxutrhklj
# '/product/{ean}/mapping':
#   parameters:
#     - schema:
#         type: string
#       name: ean
#       in: path
#       required: true
#   get:
#     summary: EAN Mapping
#     description: | 
#       Special endpoint to discover whether there are similar bottles with different EAN,
#       that DRS is aware 
#     tags: []
#     responses: {}
#     operationId: get-product-ean-mapping
#     x-stoplight:
#       id: d988ysn6j49w8
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    Pagelength:
      name: pagelength
      in: query
      description: Number of records to return
      schema:
        type: number
    Startindex:
      name: startindex
      in: query
      description: Start index for paging
      schema:
        type: number
  schemas:
    BagSeal:
      type: object
      properties:
        sealNumber:
          type: string
        bagId:
          type: string
          format: uuid
        sealTime:
          type: string
          format: date-time
      x-stoplight:
        id: cyqmwjxrizrej
    BagFull:
      type: object
      properties:
        rvmId:
          type: string
          format: uuid
        binId:
          type: string
          format: uuid
        overflowDate:
          type: string
          format: date-time
      x-stoplight:
        id: ddq57l9gf506c
    BagReplacement:
      type: object
      required:
        - id
        - rvmId
        - replacementDate
        - containers
      properties:
        id:
          type: string
          format: uuid
          description: ID of a bag in UUID format
        rvmId:
          type: string
          format: uuid
        sealNumber:
          type: string
          example: <SEAL NUMBER>
          description: |
            Optional. If RVM is able to seal bag on it's own it should send us seal number on this particular call.
        replacementDate:
          type: string
          format: date-time
        bagWeight:
          type: number
        containerAmount:
          type: integer
        relatedTransactionsIds:
          type: array
          items:
            type: string
            format: uuid
        containers:
          type: array
          items:
            $ref: models/ContainerFull.yaml
      x-stoplight:
        id: ty6l3ytww8zew
  responses:
    200PostReturnId:
      description: OK
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    400ValidationFailed:
      description: Example response
      content:
        application/json:
          schema:
            $ref: models/ErrorMessage.yaml
    409Conflict:
      description: Example response
      content:
        application/json:
          schema:
            $ref: models/ErrorMessage.yaml
          examples: null
  examples:
    ConflictMessage:
      value:
        msg: Conflicting ID of the request.
        errorCode: 5
        path: <path of the request>
